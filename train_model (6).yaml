name: Train model
inputs:
- {name: data, type: String}
outputs:
- {name: out, type: String}
implementation:
  container:
    image: tensorflow/tensorflow:latest-gpu-py3
    command:
    - sh
    - -c
    - (PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet --no-warn-script-location
      'pandas==0.23.4' 'scikit-learn==0.22' || PIP_DISABLE_PIP_VERSION_CHECK=1 python3
      -m pip install --quiet --no-warn-script-location 'pandas==0.23.4' 'scikit-learn==0.22'
      --user) && "$0" "$@"
    - sh
    - -ec
    - |
      program_path=$(mktemp)
      printf "%s" "$0" > "$program_path"
      python3 -u "$program_path" "$@"
    - "def _make_parent_dirs_and_return_path(file_path: str):\n    import os\n   \
      \ os.makedirs(os.path.dirname(file_path), exist_ok=True)\n    return file_path\n\
      \ndef train_model(data_path, out_path):\n  import sys, subprocess\n  subprocess.run([sys.executable,\
      \ \"-m\", \"pip\", \"install\", \"scikit-learn==0.22\"])\n  subprocess.run([sys.executable,\
      \ \"-m\", \"pip\", \"install\", \"numpy\"])\n  subprocess.run([sys.executable,\
      \ \"-m\", \"pip\", \"install\", \"pandas\"])\n  import pickle\n  import numpy\
      \ as np\n  import pandas as pd  \n  from sklearn.linear_model import LogisticRegression\n\
      \  with open(data_path,'rb') as f:\n    data = pickle.load(f)\n  model = LogisticRegression()\n\
      \  model.fit(data[\"train\"][\"X\"], data[\"train\"][\"y\"])\n  with open(out_path,'wb')\
      \ as f:\n    pickle.dump((model),f)\n\nimport argparse\n_parser = argparse.ArgumentParser(prog='Train\
      \ model', description='')\n_parser.add_argument(\"--data\", dest=\"data_path\"\
      , type=str, required=True, default=argparse.SUPPRESS)\n_parser.add_argument(\"\
      --out\", dest=\"out_path\", type=_make_parent_dirs_and_return_path, required=True,\
      \ default=argparse.SUPPRESS)\n_parsed_args = vars(_parser.parse_args())\n\n\
      _outputs = train_model(**_parsed_args)\n"
    args:
    - --data
    - {inputPath: data}
    - --out
    - {outputPath: out}
